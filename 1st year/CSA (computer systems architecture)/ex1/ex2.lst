     1                                  ; a,b,c,d - byte
     2                                  ; (a+b-d)+(a-b-d) 
     3                                  ; ex: a = 5, b = 3, c = 1, d = 3
     4                                  ; (5+3-3)+(5-3-3) = 4
     5                                  bits 32 ; assembling for the 32 bits architecture
     6                                  
     7                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     8                                  global start        
     9                                  
    10                                  ; declare external functions needed by our program
    11                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    12                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 05                          a db 5
    19 00000001 03                          b db 3
    20 00000002 01                          c db 1
    21 00000003 03                          d db 3
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 A0[00000000]                    mov AL, [a]
    27 00000005 8A1D[01000000]                  mov BL, [b]
    28 0000000B 00D8                            add AL, BL ; AL <- AL + BL (a + b)
    29                                          
    30 0000000D 8A1D[03000000]                  mov BL, [d]
    31 00000013 28D8                            sub AL, BL ; AL <- AL - BL (a+b-d)
    32                                          
    33 00000015 8A25[00000000]                  mov AH, [a]
    34 0000001B 8A1D[01000000]                  mov BL, [b]
    35 00000021 28DC                            sub AH, BL ; AH <- AH - BL (a-b)
    36                                          
    37 00000023 8A1D[03000000]                  mov BL, [d]
    38 00000029 28DC                            sub AH, BL ; AH <- AH - BL (a-b-d)
    39                                          
    40 0000002B 00E0                            ADD AL, AH ; AL <- AL + AH (a+b-d)+(a-b-d)
    41                                          
    42                                          ; exit(0)
    43 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
