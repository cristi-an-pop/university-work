%9.
%a. For a list of integer number, write a predicate to add in list after 1-st, 3-rd, 7-th, 15-th element a given % value e.
afterOdd([], _, _, _, []).
afterOdd([H | T], E, C, NI, [H, E | R]) :-
    C =:= NI,
    !,
    NewI is NI * 2 + 1,
    NewC is C + 1,
    afterOdd(T, E, NewC, NewI, R).
afterOdd([H | T], E, C, NI, [H | R]) :-
    NewC is C + 1,
    afterOdd(T, E, NewC, NI, R).
afterOddMain(L, E, R) :-
    afterOdd(L, E, 1, 1, R).

%b. For a heterogeneous list, formed from integer numbers and list of numbers; add in every sublist after 1-st, 
%3-rd, 7-th, 15-th element the value found before the sublist in the heterogenous list. The list has the %particularity that starts with a number and there arenâ€™t two consecutive elements lists.
%Eg.: [1, [2, 3], 7, [4, 1, 4], 3, 6, [7, 5, 1, 3, 9, 8, 2, 7], 5] =>
%[1, [2, 1, 3], 7, [4, 7, 1, 4, 7], 3, 6, [7, 6, 5, 1, 6, 3, 9, 8, 2, 6, 7], 5].

heteList([], _, []).
heteList([H | T], E, [Res | R]) :-
    is_list(H),
    afterOddMain(H, E, Res),
    heteList(T, E, R).
heteList([H | T], E, [H | R]) :-
    \+ is_list(H),
    heteList(T, E, R).