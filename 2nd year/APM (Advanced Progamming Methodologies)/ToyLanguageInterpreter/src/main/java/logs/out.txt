Program ID: -725687069
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 161435910
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 161435910
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 161435910
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 161435910
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -725687069
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 161435910
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1538447128
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 771851178
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 771851178
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 771851178
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 771851178
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -833851760
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[((((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), (((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), (((bool a;int v);a=true);IF(a) THEN (v=2) ELSE (v=3))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), ((bool a;int v);a=true)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), ((bool a;int v);a=true)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, (bool a;int v)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, (bool a;int v)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, int v, bool a]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, int v, bool a]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, int v]
Symbol Table:
{a=false}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true, int v]
Symbol Table:
{a=false}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true]
Symbol Table:
{a=false, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3), a=true]
Symbol Table:
{a=false, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3)]
Symbol Table:
{a=true, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), IF(a) THEN (v=2) ELSE (v=3)]
Symbol Table:
{a=true, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), v=2]
Symbol Table:
{a=true, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v), v=2]
Symbol Table:
{a=true, v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v)]
Symbol Table:
{a=true, v=2}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[print(v)]
Symbol Table:
{a=true, v=2}
Output:
[]
File Table:
{}
Heap:


Program ID: 313292816
Execution Stack:
[]
Symbol Table:
{a=true, v=2}
Output:
[2]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1890179570
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1890179570
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1890179570
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1890179570
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -1996769584
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 1890179570
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 722994509
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1093379415
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: -1093379415
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -1093379415
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: -1093379415
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 722994509
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: -1093379415
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 188900712
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 188900712
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 188900712
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Program ID: 188900712
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 188900712
Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: -1207161932
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: -1207161932
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: -1207161932
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Program ID: -1207161932
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: -1207161932
Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 272473833
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 272473833
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 272473833
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 272473833
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 15
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 15
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 15
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 15
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 15
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 16
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 20
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 20
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 20
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 20
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 20
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 25
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 25
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 25
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 25
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 25
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 7
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 4
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 4
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 4
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 4
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 8
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 13
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 7
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 9
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 10
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 10
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 14
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 5
Execution Stack:
[((((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="./IO/test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="./IO/test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="./IO/test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="./IO/test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="./IO/test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="./IO/test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[0, 0]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="./IO/test.in"}
Output:
[0, 0]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[((((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), (((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), (((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="./IO/test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="./IO/test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="./IO/test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="./IO/test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="./IO/test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="./IO/test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="./IO/test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="./IO/test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 10
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="./IO/test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 3
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Program ID: 3
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 3
Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 6
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 17
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 17
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 17
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 17
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 17
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 17
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 17
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 3
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 3
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 3
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Program ID: 3
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 3
Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 6
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 16
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[0]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[0, 0]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[0, 0]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@eff9ca9}
Heap:


Program ID: 5
Execution Stack:
[]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 11
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@6ba54e5c}
Heap:


Program ID: 11
Execution Stack:
[]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 2
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 12
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 21
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 16
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 21
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 7
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 13
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 18
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 18
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 18
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 18
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 13
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 18
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 18
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 18
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 1
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 1
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 6
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 7
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 7
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 12
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 14
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 14
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 14
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 14
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 20
Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Program ID: 20
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Program ID: 20
Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 20
Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Program ID: 23
Execution Stack:
[((((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v));print(rH(a)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), (((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))));print(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), ((((int v;Ref(int) a);v=10);new(a, 22));fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), (((int v;Ref(int) a);v=10);new(a, 22))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), ((int v;Ref(int) a);v=10)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, (int v;Ref(int) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a, int v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10, Ref(int) a]
Symbol Table:
{v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22), v=10]
Symbol Table:
{a=(0, int), v=0}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a)))))), new(a, 22)]
Symbol Table:
{a=(0, int), v=10}
Output:
[]
File Table:
{}
Heap:


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[print(rH(a)), print(v), fork((wH(a, 30);(v=32;(print(v);print(rH(a))))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 28
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 28
Execution Stack:
[(wH(a, 30);(v=32;(print(v);print(rH(a)))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 28
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 28
Execution Stack:
[(v=32;(print(v);print(rH(a)))), wH(a, 30)]
Symbol Table:
{a=(1, int), v=10}
Output:
[10]
File Table:
{}
Heap:
1 -> 22


Program ID: 23
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(v=32;(print(v);print(rH(a))))]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(print(v);print(rH(a))), v=32]
Symbol Table:
{a=(1, int), v=10}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[(print(v);print(rH(a)))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[print(rH(a)), print(v)]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[print(rH(a))]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32]
File Table:
{}
Heap:
1 -> 30


Program ID: 28
Execution Stack:
[]
Symbol Table:
{a=(1, int), v=32}
Output:
[10, 22, 32, 30]
File Table:
{}
Heap:
1 -> 30


Program ID: 33
Execution Stack:
[((((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c));closeRFile())]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), (((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), ((((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c));readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), (((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c));print(c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), ((((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c);readFile(v, c))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), (((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v));int c)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, ((string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in");openRFile(v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), (string v;v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in")]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in", string v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v), v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"]
Symbol Table:
{v=""}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c, openRFile(v)]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c), int c]
Symbol Table:
{v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c), readFile(v, c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c), print(c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c), readFile(v, c)]
Symbol Table:
{c=5, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile(), print(c)]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[closeRFile()]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in=java.io.BufferedReader@32295235}
Heap:


Program ID: 33
Execution Stack:
[]
Symbol Table:
{c=0, v="D:\ubb\university-work\2nd year\APM (Advanced Progamming Methodologies)\ToyLanguageInterpreter\src\main\java\IO\test.in"}
Output:
[5, 0]
File Table:
{}
Heap:


Program ID: -230373028
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -230373028
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -230373028
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -230373028
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -192759776
Execution Stack:
[IF(10 < 2) THEN (nop) ELSE (nop)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -192759776
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -192759776
Execution Stack:
[nop]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: -192759776
Execution Stack:
[]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1501908583
Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Program ID: 1501908583
Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


