Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Execution Stack:
[(((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10));print(rH(g)))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), ((((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5));new(g, 10))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), (((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g);new(g, 5))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), ((((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))));Ref(int) g)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, (((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30));print(rH(rH(a))))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), ((((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v));new(v, 30))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), (((Ref(int) v;new(v, 20));Ref(Ref(int)) a);new(a, v))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), ((Ref(int) v;new(v, 20));Ref(Ref(int)) a)]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, (Ref(int) v;new(v, 20))]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20), Ref(int) v]
Symbol Table:
{}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a, new(v, 20)]
Symbol Table:
{v=(0, int)}
Output:
[]
File Table:
{}
Heap:


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v), Ref(Ref(int)) a]
Symbol Table:
{v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30), new(a, v)]
Symbol Table:
{a=(0, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a))), new(v, 30)]
Symbol Table:
{a=(2, Ref(int)), v=(1, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g, print(rH(rH(a)))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5), Ref(int) g]
Symbol Table:
{a=(2, Ref(int)), v=(3, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10), new(g, 5)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(0, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30


Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Execution Stack:
[print(rH(g)), new(g, 10)]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(4, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5


Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
4 -> 5
5 -> 10


Execution Stack:
[print(rH(g))]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


Execution Stack:
[]
Symbol Table:
{a=(2, Ref(int)), v=(3, int), g=(5, int)}
Output:
[20, 10]
File Table:
{}
Heap:
1 -> 20
2 -> (1, int)
3 -> 30
5 -> 10


